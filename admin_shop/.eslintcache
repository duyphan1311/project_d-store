[{"D:\\Workspace\\NLCNTT\\admin_shop\\src\\index.js":"1","D:\\Workspace\\NLCNTT\\admin_shop\\src\\reportWebVitals.js":"2","D:\\Workspace\\NLCNTT\\admin_shop\\src\\App.js":"3","D:\\Workspace\\NLCNTT\\admin_shop\\src\\Home\\Home.jsx":"4","D:\\Workspace\\NLCNTT\\admin_shop\\src\\History\\History.jsx":"5","D:\\Workspace\\NLCNTT\\admin_shop\\src\\Products\\Products.jsx":"6","D:\\Workspace\\NLCNTT\\admin_shop\\src\\Menu\\Menu.jsx":"7","D:\\Workspace\\NLCNTT\\admin_shop\\src\\Header\\Header.jsx":"8","D:\\Workspace\\NLCNTT\\admin_shop\\src\\Chat\\Chat.jsx":"9","D:\\Workspace\\NLCNTT\\admin_shop\\src\\Users\\Users.jsx":"10","D:\\Workspace\\NLCNTT\\admin_shop\\src\\API\\HistoryAPI.jsx":"11","D:\\Workspace\\NLCNTT\\admin_shop\\src\\API\\UserAPI.jsx":"12","D:\\Workspace\\NLCNTT\\admin_shop\\src\\API\\MessengerAPI.jsx":"13","D:\\Workspace\\NLCNTT\\admin_shop\\src\\API\\ProductAPI.jsx":"14","D:\\Workspace\\NLCNTT\\admin_shop\\src\\Products\\Component\\Pagination.jsx":"15","D:\\Workspace\\NLCNTT\\admin_shop\\src\\API\\axiosClient.jsx":"16","D:\\Workspace\\NLCNTT\\admin_shop\\src\\Products\\Component\\IndexPage.jsx":"17","D:\\Workspace\\NLCNTT\\admin_shop\\src\\Users\\UserProfile.jsx":"18","D:\\Workspace\\NLCNTT\\admin_shop\\src\\Products\\AddProduct.jsx":"19","D:\\Workspace\\NLCNTT\\admin_shop\\src\\Products\\ProductDetail.jsx":"20"},{"size":500,"mtime":1612070076000,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1612070076000,"results":"23","hashOfConfig":"22"},{"size":1737,"mtime":1670043502615,"results":"24","hashOfConfig":"22"},{"size":10610,"mtime":1670049221960,"results":"25","hashOfConfig":"22"},{"size":7807,"mtime":1670047495534,"results":"26","hashOfConfig":"22"},{"size":8245,"mtime":1670044305426,"results":"27","hashOfConfig":"22"},{"size":3396,"mtime":1612070076000,"results":"28","hashOfConfig":"22"},{"size":4007,"mtime":1669956443508,"results":"29","hashOfConfig":"22"},{"size":12900,"mtime":1670049229558,"results":"30","hashOfConfig":"22"},{"size":5421,"mtime":1670037129252,"results":"31","hashOfConfig":"22"},{"size":531,"mtime":1670047329909,"results":"32","hashOfConfig":"22"},{"size":627,"mtime":1670035377567,"results":"33","hashOfConfig":"22"},{"size":330,"mtime":1669982125101,"results":"34","hashOfConfig":"22"},{"size":883,"mtime":1670039918323,"results":"35","hashOfConfig":"22"},{"size":2163,"mtime":1612070076000,"results":"36","hashOfConfig":"22"},{"size":794,"mtime":1669958947232,"results":"37","hashOfConfig":"22"},{"size":1071,"mtime":1612070076000,"results":"38","hashOfConfig":"22"},{"size":6965,"mtime":1670038121040,"results":"39","hashOfConfig":"22"},{"size":7942,"mtime":1670045290879,"results":"40","hashOfConfig":"22"},{"size":8499,"mtime":1670046043924,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"u6z2hj",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},"D:\\Workspace\\NLCNTT\\admin_shop\\src\\index.js",[],["91","92"],"D:\\Workspace\\NLCNTT\\admin_shop\\src\\reportWebVitals.js",[],"D:\\Workspace\\NLCNTT\\admin_shop\\src\\App.js",[],"D:\\Workspace\\NLCNTT\\admin_shop\\src\\Home\\Home.jsx",["93","94","95"],"D:\\Workspace\\NLCNTT\\admin_shop\\src\\History\\History.jsx",["96","97","98"],"import alertify from 'alertifyjs';\nimport React, { useEffect, useState } from 'react';\nimport io from \"socket.io-client\";\nimport HistoryAPI from '../API/HistoryAPI';\nconst socket = io(\"http://localhost:3000/api\");\n\nfunction History(props) {\n\n    const [history, setHistory] = useState([])\n\n    const [histor, setHistor] = useState([])\n\n    const [load, setLoad] = useState(false)\n\n    const [text, setText] = useState('')\n\n    useEffect(() => {\n\n        const fetchData = async () => {\n\n            const response = await HistoryAPI.getAll()\n            console.log(response)\n\n            setHistory(response)\n\n        }\n\n        fetchData()\n\n    }, [])\n\n    //Hàm này dùng để nhận socket từ server gửi lên\n    useEffect(() => {\n\n        //Nhận dữ liệu từ server gửi lên thông qua socket với key receive_order\n        socket.on('receive_order', (data) => {\n\n            setText('User ID: ' + data + ' Vừa Đặt Hàng')\n\n            setTimeout(() => {\n                window.location.reload()\n            }, 4000)\n\n\n\n        })\n\n    }, [])\n\n    const handleSubmit = async (id) => {\n        try {\n            const res = await HistoryAPI.updateHistory(id, {\n                ...histor\n            })\n            setHistor({ ...res.data })\n            alertify.set('notifier', 'position', 'bottom-left');\n            alertify.error('Bạn Đã Cập Nhật Thành Công: ' + id);\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n    return (\n        <div className=\"page-wrapper\">\n            <div className=\"page-breadcrumb\">\n                <div className=\"row\">\n                    <div className=\"col-7 align-self-center\">\n                        <h4 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">Basic Initialisation</h4>\n                        <div className=\"d-flex align-items-center\">\n                            <nav aria-label=\"breadcrumb\">\n                                <ol className=\"breadcrumb m-0 p-0\">\n                                    <li className=\"breadcrumb-item\"><a href=\"/\" className=\"text-muted\">History</a></li>\n                                    <li className=\"breadcrumb-item text-muted active\" aria-current=\"page\">Table</li>\n                                </ol>\n                            </nav>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">History</h4>\n                                <h3>{text}</h3>\n                                <input className=\"form-control w-25\" type=\"text\" placeholder=\"Enter Search!\" />\n                                <br />\n                                <div className=\"table-responsive\">\n                                    <table className=\"table table-striped table-bordered no-wrap\">\n                                        <thead>\n                                            <tr>\n                                                <th>ID User</th>\n                                                <th>Name</th>\n                                                <th>Phone</th>\n                                                <th>Address</th>\n                                                <th>Total</th>\n                                                <th>Delivery</th>\n                                                <th>Status</th>\n                                                <th>Detail</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                history && history.map(value => (\n                                                    <tr key={value._id}>\n                                                        <td>{value.idUser}</td>\n                                                        <td>{value.fullname}</td>\n                                                        <td>{value.phone}</td>\n                                                        <td>{value.address}</td>\n                                                        <td>{value.total}</td>\n                                                        <td>\n                                                            <select\n                                                                name=\"delivery\"\n                                                                id=\"delivery\"\n                                                                onChange={(e) => setHistor({ ...histor, delivery: e.target.value })}\n                                                            >\n                                                                {value.delivery ? (\n                                                                    <><option value={true}>Đã Vận Chuyển</option><option value={false}>Chưa Vận Chuyển</option></>\n                                                                ) : (\n                                                                    <><option value={false}>Chưa Vận Chuyển</option><option value={true}>Đã Vận Chuyển</option></>\n                                                                )}\n                                                            </select>\n                                                        </td>\n                                                        <td>\n                                                            <select\n                                                                name=\"status\"\n                                                                id=\"status\"\n                                                                onChange={(e) => setHistor({ ...histor, status: e.target.value })}\n                                                            >\n                                                                {value.status ? (\n                                                                    <><option value={true}>Đã Thanh Toán</option><option value={false}>Chưa Thanh Toán</option></>\n                                                                ) : (\n                                                                    <><option value={false}>Chưa Thanh Toán</option><option value={true}>Đã Thanh Toán</option></>\n                                                                )}\n                                                            </select>\n                                                        </td>\n                                                        <td>\n                                                            <a style={{ cursor: 'pointer', color: 'white' }} onClick={() => handleSubmit(value._id)} className=\"btn btn-success\">Edit</a>\n                                                        </td>\n                                                    </tr>\n                                                ))\n                                            }\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <footer className=\"footer text-center text-muted\">\n                All Rights Reserved by Adminmart. Designed and Developed by <a\n                    href=\"https://www.facebook.com/KimTien.9920/\">Tiền Kim</a>.\n            </footer>\n        </div>\n    );\n}\n\nexport default History;","D:\\Workspace\\NLCNTT\\admin_shop\\src\\Products\\Products.jsx",["99","100","101"],"import alertify from 'alertifyjs';\nimport queryString from 'query-string';\nimport React, { useEffect, useState } from 'react';\nimport ProductAPI from '../API/ProductAPI';\nimport Pagination from './Component/Pagination';\n\nfunction Products(props) {\n\n    const [products, setProducts] = useState([])\n    const [loadAPI, setLoadAPI] = useState(false)\n\n    const [pagination, setPagination] = useState({\n        page: '1',\n        count: '8',\n        search: '',\n        category: 'all'\n    })\n\n    const [search, setSearch] = useState('')\n\n    const onChangeText = (e) => {\n\n        const value = e.target.value\n\n        setPagination({\n            page: pagination.page,\n            count: pagination.count,\n            search: value,\n            category: pagination.category\n        })\n\n    }\n\n    //Tổng số trang\n    const [totalPage, setTotalPage] = useState()\n\n    //Hàm này dùng để thay đổi state pagination.page\n    //Nó sẽ truyền xuống Component con và nhận dữ liệu từ Component con truyền lên\n    const handlerChangePage = (value) => {\n        console.log(\"Value: \", value)\n\n        //Sau đó set lại cái pagination để gọi chạy làm useEffect gọi lại API pagination\n        setPagination({\n            page: value,\n            count: pagination.count,\n            search: pagination.search,\n            category: pagination.category\n        })\n    }\n\n    //Gọi hàm useEffect tìm tổng số sản phẩm để tính tổng số trang\n    //Và nó phụ thuộc và state pagination\n    useEffect(() => {\n\n        const fetchAllData = async () => {\n\n            const response = await ProductAPI.getAPI()\n            console.log(response)\n\n\n            //Tính tổng số trang = tổng số sản phẩm / số lượng sản phẩm 1 trang\n            const totalPage = Math.ceil(parseInt(response.length) / parseInt(pagination.count))\n            console.log(totalPage)\n\n            setTotalPage(totalPage)\n        }\n\n        fetchAllData()\n        setLoadAPI(false)\n\n    }, [pagination, loadAPI])\n\n    //Gọi hàm Pagination\n    useEffect(() => {\n\n        const fetchData = async () => {\n\n            const params = {\n                page: pagination.page,\n                count: pagination.count,\n                search: pagination.search,\n                category: pagination.category\n            }\n\n            const query = queryString.stringify(params)\n\n            const newQuery = '?' + query\n\n            const response = await ProductAPI.getPagination(newQuery)\n            console.log(response)\n\n            setProducts(response)\n\n        }\n\n        fetchData()\n        setLoadAPI(false)\n\n    }, [pagination, loadAPI])\n\n    const onDeleteProduct = (id) => {\n        console.log(\"id: \" + id)\n        const fetchDelete = async () => {\n            const response = await ProductAPI.deleteProduct(id)\n            console.log(response)\n        }\n\n        fetchDelete()\n\n        //Sau đó thay đổi state loadAPI và load lại hàm useEffect\n        setLoadAPI(true)\n\n        alertify.set('notifier', 'position', 'bottom-left');\n        alertify.error('Bạn Đã Xóa Thành Công User: ' + id);\n    }\n\n    return (\n        <div className=\"page-wrapper\">\n            <div className=\"page-breadcrumb\">\n                <div className=\"row\">\n                    <div className=\"col-7 align-self-center\">\n                        <h4 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">Basic Initialisation</h4>\n                        <div className=\"d-flex align-items-center\">\n                            <nav aria-label=\"breadcrumb\">\n                                <ol className=\"breadcrumb m-0 p-0\">\n                                    <li className=\"breadcrumb-item\"><a href=\"/\" className=\"text-muted\">Home</a></li>\n                                    <li className=\"breadcrumb-item text-muted active\" aria-current=\"page\">Table</li>\n                                </ol>\n                            </nav>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Products</h4>\n                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    <input className=\"form-control w-25\" onChange={onChangeText} type=\"text\" placeholder=\"Enter Search!\" />\n                                    <a style={{\n                                        cursor: 'pointer',\n                                        color: 'white',\n                                        borderRadius: '5px',\n                                        width: '100px',\n                                        height: '50px',\n                                        fontSize: '20px',\n                                        fontWeight: 'bold'\n                                    }} className=\"btn btn-success\" href='/add-product'>Create</a>\n                                </div>\n                                <br />\n                                <div className=\"table-responsive\">\n                                    <table className=\"table table-striped table-bordered no-wrap\">\n                                        <thead>\n                                            <tr>\n                                                <th>ID</th>\n                                                <th>Name</th>\n                                                <th>Price</th>\n                                                <th>Image</th>\n                                                <th>Category</th>\n                                                <th>Edit</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                products && products.map(value => (\n                                                    <tr key={value._id}>\n                                                        <td>{value._id}</td>\n                                                        <td>{value.name}</td>\n                                                        <td>{value.price}</td>\n                                                        <td>\n                                                            <img src={value.img1} style={{ height: '60px', width: '60px' }} alt=\"\" />\n                                                        </td>\n                                                        <td>{value.category}</td>\n                                                        <td>\n                                                            <a style={{ cursor: 'pointer', color: 'white' }} href={`/product/${value._id}`} className=\"btn btn-success\">View</a>\n                                                            &nbsp;\n                                                            <a style={{ cursor: 'pointer', color: 'white' }} onClick={() => onDeleteProduct(value._id)} className=\"btn btn-danger\">Delete</a>\n                                                        </td>\n                                                    </tr>\n                                                ))\n                                            }\n                                        </tbody>\n                                    </table>\n                                    <Pagination pagination={pagination} handlerChangePage={handlerChangePage} totalPage={totalPage} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <footer className=\"footer text-center text-muted\">\n                All Rights Reserved by Adminmart. Designed and Developed by <a\n                    href=\"https://www.facebook.com/KimTien.9920/\">Tiền Kim</a>.\n            </footer>\n        </div>\n    );\n}\n\nexport default Products;","D:\\Workspace\\NLCNTT\\admin_shop\\src\\Menu\\Menu.jsx",["102","103"],"import React from 'react';\n\nfunction Menu(props) {\n\n    return (\n        <aside className=\"left-sidebar\" data-sidebarbg=\"skin6\">\n            <div className=\"scroll-sidebar\" data-sidebarbg=\"skin6\">\n                <nav className=\"sidebar-nav\">\n                    <ul id=\"sidebarnav\">\n                        <li className=\"sidebar-item\"> <a className=\"sidebar-link sidebar-link\" href='/'>\n                            <i data-feather=\"home\" className=\"feather-icon\"></i><span\n                                className=\"hide-menu\">Dashboard</span></a></li>\n                        <li className=\"list-divider\"></li>\n\n                        <li className=\"nav-small-cap\"><span className=\"hide-menu\">Components</span></li>\n                        <li className=\"sidebar-item\"> <a className=\"sidebar-link sidebar-link\" href='/chat'>\n                            <i data-feather=\"message-square\" className=\"feather-icon\"></i><span\n                                className=\"hide-menu\">Customer</span></a></li>\n\n                        <li className=\"sidebar-item\"> <a className=\"sidebar-link has-arrow\" href=\"#\"\n                            aria-expanded=\"false\"><i data-feather=\"grid\" className=\"feather-icon\"></i><span\n                                className=\"hide-menu\">Tables </span></a>\n                            <ul aria-expanded=\"false\" className=\"collapse  first-level base-level-line\">\n                                <li className=\"sidebar-item\"><a href=\"/users\" className=\"sidebar-link\"><span\n                                    className=\"hide-menu\">\n                                    Datatables Users\n                                        </span></a>\n                                </li>\n                                <li className=\"sidebar-item\"><a href=\"/products\" className=\"sidebar-link\"><span className=\"hide-menu\">\n                                    Datatables Products\n                                        </span></a>\n                                </li>\n                                <li className=\"sidebar-item\"><a href=\"/history\" className=\"sidebar-link\"><span\n                                    className=\"hide-menu\">\n                                    Datatables History\n                                        </span></a>\n                                </li>\n                            </ul>\n                        </li>\n\n                        <li className=\"list-divider\"></li>\n                        <li className=\"nav-small-cap\"><span className=\"hide-menu\">Authentication</span></li>\n\n                        <li className=\"sidebar-item\"> <a className=\"sidebar-link sidebar-link\" href=\"authentication-login1.html\"\n                            aria-expanded=\"false\"><i data-feather=\"lock\" className=\"feather-icon\"></i><span\n                                className=\"hide-menu\">Login\n                                </span></a>\n                        </li>\n                        <li className=\"sidebar-item\"> <a className=\"sidebar-link sidebar-link\"\n                            href=\"authentication-register1.html\" aria-expanded=\"false\"><i data-feather=\"lock\"\n                                className=\"feather-icon\"></i><span className=\"hide-menu\">Register\n                                </span></a>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </aside>\n    );\n}\n\nexport default Menu;","D:\\Workspace\\NLCNTT\\admin_shop\\src\\Header\\Header.jsx",["104","105","106","107","108","109","110","111","112"],"import React from 'react';\nimport Logoicon from '../Image/logo-icon.png';\nimport Logolight from '../Image/logo-light-text.png';\nimport Logotext from '../Image/logo-text.png';\n\nfunction Header(props) {\n    return (\n        <header className=\"topbar\" data-navbarbg=\"skin6\">\n            <nav className=\"navbar top-navbar navbar-expand-md\">\n                <div className=\"navbar-header\" data-logobg=\"skin6\">\n                    <a className=\"nav-toggler waves-effect waves-light d-block d-md-none\" href=\"#\"><i\n                        className=\"ti-menu ti-close\"></i></a>\n                    <div className=\"navbar-brand\">\n                        <a href=\"index.html\">\n                            <b className=\"logo-icon\">\n                                <img src={Logoicon} alt=\"homepage\" className=\"dark-logo\" />\n                                <img src={Logoicon} alt=\"homepage\" className=\"light-logo\" />\n                            </b>\n                            <span className=\"logo-text\">\n                                <img src={Logotext} alt=\"homepage\" className=\"dark-logo\" />\n                                <img src={Logolight} className=\"light-logo\" alt=\"homepage\" />\n                            </span>\n                        </a>\n                    </div>\n                    <a className=\"topbartoggler d-block d-md-none waves-effect waves-light\" href=\"#\"\n                        data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n                        aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><i\n                            className=\"ti-more\"></i></a>\n                </div>\n                <div className=\"navbar-collapse collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav float-left mr-auto ml-3 pl-1\">\n                        <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\"\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                <i data-feather=\"settings\" className=\"svg-icon\"></i>\n                            </a>\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                                <a className=\"dropdown-item\" href=\"#\">Action</a>\n                                <a className=\"dropdown-item\" href=\"#\">Another action</a>\n                                <div className=\"dropdown-divider\"></div>\n                                <a className=\"dropdown-item\" href=\"#\">Something else here</a>\n                            </div>\n                        </li>\n                    </ul>\n                    <ul className=\"navbar-nav float-right\">\n                        <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" data-toggle=\"dropdown\"\n                                aria-haspopup=\"true\" aria-expanded=\"false\">\n                                <img src=\"../assets/images/users/IMG_6225.jpg\" alt=\"user\" className=\"rounded-circle\"\n                                    width=\"40\" />\n                                <span className=\"ml-2 d-none d-lg-inline-block\"><span>Hello,</span> <span\n                                    className=\"text-dark\">ADMIN</span> <i data-feather=\"chevron-down\"\n                                        className=\"svg-icon\"></i></span>\n                            </a>\n                            <div className=\"dropdown-menu dropdown-menu-right user-dd animated flipInY\">\n                                <a className=\"dropdown-item\" href=\"#\"><i data-feather=\"power\"\n                                    className=\"svg-icon mr-2 ml-1\"></i>\n                                    Logout</a>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        </header>\n    );\n}\n\nexport default Header;","D:\\Workspace\\NLCNTT\\admin_shop\\src\\Chat\\Chat.jsx",["113"],"D:\\Workspace\\NLCNTT\\admin_shop\\src\\Users\\Users.jsx",["114"],"\nimport alertify from 'alertifyjs';\nimport React, { useEffect, useState } from 'react';\nimport styled from \"styled-components\";\nimport UserAPI from '../API/UserAPI';\n\nfunction Users(props) {\n\n    const [users, setUsers] = useState([])\n    const [loadAPI, setLoadAPI] = useState(false)\n\n    useEffect(() => {\n        const fetchData = async () => {\n\n            const response = await UserAPI.getAllData()\n            console.log(response)\n\n            setUsers(response)\n\n        }\n\n        fetchData()\n        setLoadAPI(false)\n\n    }, [loadAPI])\n\n    const onDeleteUser = (id) => {\n        console.log(\"idUser: \" + id)\n        const fetchDelete = async () => {\n            const response = await UserAPI.deleteUser(id)\n            console.log(response)\n        }\n\n        fetchDelete()\n\n        //Sau đó thay đổi state loadAPI và load lại hàm useEffect\n        setLoadAPI(true)\n\n        alertify.set('notifier', 'position', 'bottom-left');\n        alertify.error('Bạn Đã Xóa Thành Công User: ' + id);\n    }\n\n    return (\n        <div className=\"page-wrapper\">\n            <div className=\"page-breadcrumb\">\n                <div className=\"row\">\n                    <div className=\"col-7 align-self-center\">\n                        <h4 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">Basic Initialisation</h4>\n                        <div className=\"d-flex align-items-center\">\n                            <nav aria-label=\"breadcrumb\">\n                                <ol className=\"breadcrumb m-0 p-0\">\n                                    <li className=\"breadcrumb-item\"><a href=\"/\" className=\"text-muted\">Home</a></li>\n                                    <li className=\"breadcrumb-item text-muted active\" aria-current=\"page\">Table</li>\n                                </ol>\n                            </nav>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Users</h4>\n                                <input className=\"form-control w-25\" type=\"text\" placeholder=\"Enter Search!\" />\n                                <br />\n                                <div className=\"table-responsive\">\n                                    <table className=\"table table-striped table-bordered no-wrap\">\n                                        <thead>\n                                            <tr>\n                                                <th>ID</th>\n                                                <th>Fullname</th>\n                                                <th>Email</th>\n                                                <th>Phone</th>\n                                                <th>Role</th>\n                                                <th>Edit</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                users && users.map(value => (\n                                                    <tr key={value._id}>\n                                                        <td>{value._id}</td>\n                                                        <td>{value.fullname}</td>\n                                                        <td>{value.email}</td>\n                                                        <td>{value.phone}</td>\n                                                        <td>{value.role === 1 ? <Admin>Admin</Admin> : <Customer>Customer</Customer>}</td>\n                                                        <td>\n                                                            <a style={{ cursor: 'pointer', color: 'white' }} href={`/user/${value._id}`} className=\"btn btn-success\">View</a>\n                                                            &nbsp;\n                                                            <a style={{ cursor: 'pointer', color: 'white' }} onClick={() => onDeleteUser(value._id)} className=\"btn btn-danger\">Delete</a>\n                                                        </td>\n                                                    </tr>\n                                                ))\n                                            }\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <footer className=\"footer text-center text-muted\">\n                All Rights Reserved by Adminmart. Designed and Developed by Duy Phan.\n            </footer>\n        </div>\n    );\n}\n\nconst Admin = styled.div`\n    color: rgba(253, 182, 40);\n    background: rgba(253, 181, 40, 0.12);\n    padding: 3px 5px;\n    text-align: center;\n    border-radius: 3px;\n    font-size: 14px;\n`\nconst Customer = styled.div`\n    color: rgba(38, 198, 249);\n    background: rgba(38, 198, 249, 0.12);\n    padding: 3px 5px;\n    text-align: center;\n    border-radius: 3px;\n    font-size: 14px;\n`\n\nexport default Users;","D:\\Workspace\\NLCNTT\\admin_shop\\src\\API\\HistoryAPI.jsx",[],"D:\\Workspace\\NLCNTT\\admin_shop\\src\\API\\UserAPI.jsx",[],"D:\\Workspace\\NLCNTT\\admin_shop\\src\\API\\MessengerAPI.jsx",[],"D:\\Workspace\\NLCNTT\\admin_shop\\src\\API\\ProductAPI.jsx",[],"D:\\Workspace\\NLCNTT\\admin_shop\\src\\Products\\Component\\Pagination.jsx",[],"D:\\Workspace\\NLCNTT\\admin_shop\\src\\API\\axiosClient.jsx",[],"D:\\Workspace\\NLCNTT\\admin_shop\\src\\Products\\Component\\IndexPage.jsx",["115"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nIndexPage.propTypes = {\n    indexPage: PropTypes.array,\n    handlerChangePage: PropTypes.func,\n    pagination: PropTypes.object\n};\n\nIndexPage.defaultProps = {\n    indexPage: null,\n    handlerChangePage: null,\n    pagination: {}\n}\n\nfunction IndexPage(props) {\n\n    const { indexPage, handlerChangePage, pagination } = props\n\n    const { page } = pagination\n\n    const onIndexPage = (value) => {\n\n        if (!handlerChangePage){\n            return\n        }\n\n        handlerChangePage(value)\n\n    }\n\n    console.log(indexPage)\n\n    return (\n        <div className=\"d-flex\">\n            {\n                indexPage && indexPage.map(value => (\n                    <li className={value === parseInt(page) ? 'page-item active' : 'page-item'} \n                        key={value} \n                        onClick={() => onIndexPage(value)}>\n\n                        <a className=\"page-link\">{value}</a>\n\n                    </li>\n                ))\n            }\n        </div>\n    );\n}\n\nexport default IndexPage;","D:\\Workspace\\NLCNTT\\admin_shop\\src\\Users\\UserProfile.jsx",[],"D:\\Workspace\\NLCNTT\\admin_shop\\src\\Products\\AddProduct.jsx",["116","117","118","119"],"import alertify from 'alertifyjs';\r\nimport { useState } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport ProductAPI from '../API/ProductAPI';\r\n\r\nconst AddProduct = (props) => {\r\n\r\n    const { id } = useParams()\r\n\r\n    const [product, setProduct] = useState({})\r\n    const [loadAPI, setLoadAPI] = useState(false)\r\n    const [add, setAdd] = useState(false)\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setAdd(true)\r\n        try {\r\n            const res = await ProductAPI.addProduct({\r\n                ...product\r\n            })\r\n            console.log(res);\r\n            setProduct({ ...res.data })\r\n            alertify.set('notifier', 'position', 'bottom-left');\r\n            alertify.error('Bạn Đã Cập Nhật Thành Công User: ' + id);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n        setAdd(false)\r\n        setRedirect(true)\r\n    }\r\n\r\n    return (\r\n        <div className=\"page-wrapper\">\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                        <h4 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">Basic Initialisation</h4>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\"><a href=\"/\" className=\"text-muted\">Home</a></li>\r\n                                    <li className=\"breadcrumb-item text-muted active\" aria-current=\"page\">User</li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ProfileContainer>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n\r\n                                    {loadAPI ? (<p>Loading</p>) : (\r\n                                        <><div style={{ display: 'flex', alignItems: '' }}>\r\n                                            <h4 style={{ textAlign: 'center', marginRight: '10px' }} className=\"card-title\">Product</h4>\r\n                                        </div><br /><div className=\"table-responsive\">\r\n                                                {/* {\r\n                                                    redirect && <Redirect to={`/products`} />\r\n                                                } */}\r\n                                                <form onSubmit={handleSubmit} method=\"post\" enctype=\"multipart/form-data\">\r\n                                                    <label htmlFor=\"fullname\">Name:</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        id=\"name\"\r\n                                                        onChange={(e) => setProduct({ ...product, name: e.target.value })} />\r\n                                                    <label htmlFor=\"email\">Price:</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        id=\"price\"\r\n                                                        onChange={(e) => setProduct({ ...product, price: e.target.value })} />\r\n                                                    <label htmlFor=\"email\">Image 1:</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        name=\"img1\"\r\n                                                        onChange={(e) => setProduct({ ...product, img1: e.target.value })}\r\n                                                    />\r\n                                                    <label htmlFor=\"email\">Image 2:</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        name=\"img2\"\r\n                                                        onChange={(e) => setProduct({ ...product, img2: e.target.value })}\r\n                                                    />\r\n                                                    <label htmlFor=\"email\">Image 3:</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        name=\"img3\"\r\n                                                        onChange={(e) => setProduct({ ...product, img3: e.target.value })}\r\n                                                    />\r\n                                                    <label htmlFor=\"email\">Image 4:</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        name=\"img4\"\r\n                                                        onChange={(e) => setProduct({ ...product, img4: e.target.value })}\r\n                                                    />\r\n                                                    <label htmlFor=\"email\">Category:</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        id=\"category\"\r\n                                                        value={product.category}\r\n                                                        onChange={(e) => setProduct({ ...product, category: e.target.value })} />\r\n                                                    <button className=\"btn btn-primary\">{add ? \"Adding\" : \"Add\"}</button>\r\n                                                </form>\r\n                                            </div></>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ProfileContainer>\r\n            <footer className=\"footer text-center text-muted\">\r\n                All Rights Reserved by Adminmart. Designed and Developed by Duy Phan.\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileContainer = styled.div`\r\n    width: 100%;\r\n    height: 78vh;\r\n    padding-top: 1rem;\r\n    display: flex;\r\n    border-radius: 5px;\r\n    form {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: flex-start;;\r\n        h3 {\r\n            margin-bottom: 0.2rem;\r\n        }\r\n        label {\r\n            margin-top: 0.2rem;\r\n            color: gray;\r\n        }\r\n        input {\r\n            margin-bottom: 1rem;\r\n            outline: none;\r\n            border: none;\r\n            border-bottom: 1px solid gray;\r\n        }\r\n        input[type=\"file\"] {\r\n            border-bottom: none;\r\n        }\r\n    }\r\n`\r\n\r\nconst Admin = styled.div`\r\n    color: rgba(253, 182, 40);\r\n    background: rgba(253, 181, 40, 0.12);\r\n    padding: 3px 5px;\r\n    text-align: center;\r\n    border-radius: 3px;\r\n    font-size: 14px;\r\n`\r\nconst Customer = styled.div`\r\n    color: rgba(38, 198, 249);\r\n    background: rgba(38, 198, 249, 0.12);\r\n    padding: 3px 5px;\r\n    text-align: center;\r\n    border-radius: 3px;\r\n    font-size: 14px;\r\n`\r\n\r\nexport default AddProduct","D:\\Workspace\\NLCNTT\\admin_shop\\src\\Products\\ProductDetail.jsx",["120","121"],"import alertify from 'alertifyjs';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport ProductAPI from '../API/ProductAPI';\r\n\r\n\r\nconst ProductDetail = (props) => {\r\n\r\n\r\n    const { id } = useParams()\r\n\r\n    const [product, setProduct] = useState({})\r\n    const [loadAPI, setLoadAPI] = useState(false)\r\n    const [update, setUpdate] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setLoadAPI(true)\r\n        const fetchData = async () => {\r\n\r\n            const response = await ProductAPI.getDetail(id)\r\n            console.log(response)\r\n\r\n            setProduct(response)\r\n\r\n        }\r\n\r\n        fetchData()\r\n        setLoadAPI(false)\r\n\r\n    }, [id, loadAPI])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setUpdate(true)\r\n        try {\r\n            const res = await ProductAPI.updateProduct(id, {\r\n                ...product\r\n            })\r\n            console.log(res);\r\n            setProduct({ ...res.data })\r\n            alertify.set('notifier', 'position', 'bottom-left');\r\n            alertify.error('Bạn Đã Cập Nhật Thành Công product: ' + id);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n        setUpdate(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"page-wrapper\">\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                        <h4 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">Basic Initialisation</h4>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\"><a href=\"/\" className=\"text-muted\">Home</a></li>\r\n                                    <li className=\"breadcrumb-item text-muted active\" aria-current=\"page\">User</li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ProfileContainer>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n\r\n                                    {loadAPI ? (<p>Loading</p>) : (\r\n                                        <><div style={{ display: 'flex', alignItems: '' }}>\r\n                                            <h4 style={{ textAlign: 'center', marginRight: '10px' }} className=\"card-title\">Product Details</h4>\r\n                                        </div><br /><div className=\"table-responsive\">\r\n                                                <form onSubmit={handleSubmit} method=\"post\" enctype=\"multipart/form-data\">\r\n                                                    <label htmlFor=\"fullname\">Name:</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        id=\"name\"\r\n                                                        value={product.name}\r\n                                                        onChange={(e) => setProduct({ ...product, name: e.target.value })} />\r\n                                                    <label htmlFor=\"email\">Price:</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        id=\"price\"\r\n                                                        value={product.price}\r\n                                                        onChange={(e) => setProduct({ ...product, price: e.target.value })} />\r\n                                                    <label htmlFor=\"email\">Image 1:</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        name=\"img1\"\r\n                                                        value={product.img1}\r\n                                                        onChange={(e) => setProduct({ ...product, img1: e.target.value })}\r\n                                                    />\r\n                                                    <label htmlFor=\"email\">Image 2:</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        name=\"img2\"\r\n                                                        value={product.img2}\r\n                                                        onChange={(e) => setProduct({ ...product, img2: e.target.value })}\r\n                                                    />\r\n                                                    <label htmlFor=\"email\">Image 3:</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        name=\"img3\"\r\n                                                        value={product.img3}\r\n                                                        onChange={(e) => setProduct({ ...product, img3: e.target.value })}\r\n                                                    />\r\n                                                    <label htmlFor=\"email\">Image 4:</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        name=\"img4\"\r\n                                                        value={product.img4}\r\n                                                        onChange={(e) => setProduct({ ...product, img4: e.target.value })}\r\n                                                    />\r\n                                                    <label htmlFor=\"email\">Category:</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        id=\"category\"\r\n                                                        value={product.category}\r\n                                                        onChange={(e) => setProduct({ ...product, category: e.target.value })} />\r\n                                                    <button className=\"btn btn-primary\">{update ? \"Updating\" : \"Update\"}</button>\r\n                                                </form>\r\n                                            </div></>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ProfileContainer>\r\n            <footer className=\"footer text-center text-muted\">\r\n                All Rights Reserved by Adminmart. Designed and Developed by Duy Phan.\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileContainer = styled.div`\r\n    width: 100%;\r\n    height: 78vh;\r\n    padding-top: 1rem;\r\n    display: flex;\r\n    border-radius: 5px;\r\n    form {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: flex-start;;\r\n        h3 {\r\n            margin-bottom: 0.2rem;\r\n        }\r\n        label {\r\n            margin-top: 0.2rem;\r\n            color: gray;\r\n        }\r\n        input {\r\n            margin-bottom: 1rem;\r\n            outline: none;\r\n            border: none;\r\n            border-bottom: 1px solid gray;\r\n        }\r\n        input[type=\"file\"] {\r\n            border-bottom: none;\r\n        }\r\n    }\r\n`\r\n\r\nconst Admin = styled.div`\r\n    color: rgba(253, 182, 40);\r\n    background: rgba(253, 181, 40, 0.12);\r\n    padding: 3px 5px;\r\n    text-align: center;\r\n    border-radius: 3px;\r\n    font-size: 14px;\r\n`\r\nconst Customer = styled.div`\r\n    color: rgba(38, 198, 249);\r\n    background: rgba(38, 198, 249, 0.12);\r\n    padding: 3px 5px;\r\n    text-align: center;\r\n    border-radius: 3px;\r\n    font-size: 14px;\r\n`\r\n\r\nexport default ProductDetail",{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":104,"column":49,"nodeType":"128","endLine":104,"endColumn":87},{"ruleId":"126","severity":1,"message":"127","line":105,"column":49,"nodeType":"128","endLine":105,"endColumn":87},{"ruleId":"126","severity":1,"message":"127","line":106,"column":49,"nodeType":"128","endLine":106,"endColumn":87},{"ruleId":"129","severity":1,"message":"130","line":13,"column":12,"nodeType":"131","messageId":"132","endLine":13,"endColumn":16},{"ruleId":"129","severity":1,"message":"133","line":13,"column":18,"nodeType":"131","messageId":"132","endLine":13,"endColumn":25},{"ruleId":"126","severity":1,"message":"134","line":140,"column":61,"nodeType":"128","endLine":140,"endColumn":178},{"ruleId":"129","severity":1,"message":"135","line":19,"column":12,"nodeType":"131","messageId":"132","endLine":19,"endColumn":18},{"ruleId":"129","severity":1,"message":"136","line":19,"column":20,"nodeType":"131","messageId":"132","endLine":19,"endColumn":29},{"ruleId":"126","severity":1,"message":"134","line":179,"column":61,"nodeType":"128","endLine":179,"endColumn":180},{"ruleId":"126","severity":1,"message":"127","line":20,"column":55,"nodeType":"128","endLine":21,"endColumn":51},{"ruleId":"137","severity":1,"message":"138","line":23,"column":29,"nodeType":"128","endLine":23,"endColumn":105},{"ruleId":"126","severity":1,"message":"127","line":11,"column":21,"nodeType":"128","endLine":11,"endColumn":100},{"ruleId":"126","severity":1,"message":"127","line":25,"column":21,"nodeType":"128","endLine":27,"endColumn":117},{"ruleId":"126","severity":1,"message":"127","line":33,"column":29,"nodeType":"128","endLine":34,"endColumn":99},{"ruleId":"126","severity":1,"message":"127","line":38,"column":33,"nodeType":"128","endLine":38,"endColumn":71},{"ruleId":"126","severity":1,"message":"127","line":39,"column":33,"nodeType":"128","endLine":39,"endColumn":71},{"ruleId":"126","severity":1,"message":"127","line":41,"column":33,"nodeType":"128","endLine":41,"endColumn":71},{"ruleId":"126","severity":1,"message":"127","line":47,"column":29,"nodeType":"128","endLine":48,"endColumn":76},{"ruleId":"137","severity":1,"message":"139","line":47,"column":29,"nodeType":"128","endLine":48,"endColumn":76},{"ruleId":"126","severity":1,"message":"127","line":56,"column":33,"nodeType":"128","endLine":56,"endColumn":71},{"ruleId":"126","severity":1,"message":"134","line":282,"column":49,"nodeType":"128","endLine":283,"endColumn":75},{"ruleId":"126","severity":1,"message":"134","line":92,"column":61,"nodeType":"128","endLine":92,"endColumn":177},{"ruleId":"126","severity":1,"message":"134","line":42,"column":25,"nodeType":"128","endLine":42,"endColumn":50},{"ruleId":"129","severity":1,"message":"140","line":12,"column":21,"nodeType":"131","messageId":"132","endLine":12,"endColumn":31},{"ruleId":"129","severity":1,"message":"141","line":14,"column":12,"nodeType":"131","messageId":"132","endLine":14,"endColumn":20},{"ruleId":"129","severity":1,"message":"142","line":153,"column":7,"nodeType":"131","messageId":"132","endLine":153,"endColumn":12},{"ruleId":"129","severity":1,"message":"143","line":161,"column":7,"nodeType":"131","messageId":"132","endLine":161,"endColumn":15},{"ruleId":"129","severity":1,"message":"142","line":172,"column":7,"nodeType":"131","messageId":"132","endLine":172,"endColumn":12},{"ruleId":"129","severity":1,"message":"143","line":180,"column":7,"nodeType":"131","messageId":"132","endLine":180,"endColumn":15},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'load' is assigned a value but never used.","Identifier","unusedVar","'setLoad' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-expanded is not supported by the role list. This role is implicit on the element ul.","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","'setLoadAPI' is assigned a value but never used.","'redirect' is assigned a value but never used.","'Admin' is assigned a value but never used.","'Customer' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]